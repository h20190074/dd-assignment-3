1. DETAILS OF THE PROJECT

A Block Device Driver for the USB drive is implemented which is responsible to implement the BIO request processing function and implement READ(10), WRITE(10) SCSI command functions in order to read and write sectors on the USB disk. 
Initially we write a kernel module for a driver that reads the capacity of a  USB pen drive which should be a valid USB attached SCSI device. The output of the driver should be shown in the kernel log with following information:  VID, PID, Device or Interface Class, Interface Subclass, Interface Protocol, Number and type of endpoints. The driver then initiates SCSI command over bulk EP and read the device capacity using the appropriate SCSI command which should be logged on the kernel log.
After implementation of these functions, we organize the entire driver as a block device driver that allocates the USB drive as a disk of its size. In the request function, we implement the BIO request processing function. We implement the READ(10) and WRITE(10) SCSI command functions in order to read and write sectors on the USB disk. Then, we allocate the USB drive as a disk of its size. We read the bio and defer the read/write work to the bottom half using workqueue. Finally, we process the request in the bottom half by calling appropriate functions (READ/WRITE).

2.  HOW TO RUN


1.	In terminal type 'make all' to compile the program.
2.	Insert the kernal file using 'sudo insmod main.ko'.
3.	Remove the existing usb driver using 'sudo rmmod uas' and 'sudo rmmod usb_storage'.
4.	Plug usb flash device to check if usb details are coming or not
5.	Type 'sudo fdisk -l' to see if the usb_driver is seen or not. Here it will show /dev/usb1. 
6.	Create a folder in media directory using 'sudo mkdir /media/folder_name/' Eg: sudo mkdir /media/usb1/
7.	type 'sudo mount -t vfat /dev/myusb1 /media/folder_name' to mount the usb filesystem into /media/foldername. Ex: sudo mount -t vfat /dev/myusb1 /media/usb1/
8.	by typing 'sudo -i'go to root directory 
9.	go to the directory where usb_driver is mounted. Eg: cd /media/kusb/
10.	create a .txt file by typing 'echo "write something" >text_file_name.txt'.
11.	With the help of command 'cat text_file_name.txt', you can see the content in the text file.
12.	Leave from the media directory using 'cd ../..' and unmount the file system using 'umount /media/folder_name/' Eg: umount /media/kusb/
13.	Type 'logout'to leave the root directory,

